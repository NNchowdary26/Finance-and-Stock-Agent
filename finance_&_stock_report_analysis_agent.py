# -*- coding: utf-8 -*-
"""Finance & Stock Report Analysis Agent.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_BpyDJqDt2ZjHHlAyf8FRFDlMikWVfd6
"""

!pip install groq yfinance agno
!pip install groq duckduckgo-search newspaper4k lxml_html_clean agno
!pip install -U sqlalchemy 'psycopg[binary]' pgvector pypdf agno
!pip install udocker
!pip install sentence-transformers

!python --version

import os
from google.colab import userdata

os.environ['GROQ_API_KEY'] = userdata.get('GROQ_API_KEY')
os.environ['PHI_API_KEY'] = userdata.get('PHI_API_KEY')

print("API keys have been set!")

print("Groq API key set:" if os.getenv("GROQ_API_KEY") else "Groq API key not set")

print("Phi API key set:" if os.getenv("PHI_API_KEY") else "Phi API key not set")

from textwrap import dedent
from agno.agent import Agent
from agno.models.groq import Groq
from agno.tools.duckduckgo import DuckDuckGoTools
from agno.tools.newspaper4k import Newspaper4kTools

# Initialize the research agent with advanced journalistic capabilities
research_agent = Agent(
    model=Groq(id="llama3-70b-8192"),
    tools=[DuckDuckGoTools(), Newspaper4kTools()],
    description=dedent("""\
        You are an elite research analyst in the financial services domain.
        Your expertise encompasses:

        - Deep investigative financial research and analysis
        - fact-checking and source verification
        - Data-driven reporting and visualization
        - Expert interview synthesis
        - Trend analysis and future predictions
        - Complex topic simplification
        - Ethical practices
        - Balanced perspective presentation
        - Global context integration\
    """),
    instructions=dedent("""\
        1. Research Phase
           - Search for 5 authoritative sources on the topic
           - Prioritize recent publications and expert opinions
           - Identify key stakeholders and perspectives

        2. Analysis Phase
           - Extract and verify critical information
           - Cross-reference facts across multiple sources
           - Identify emerging patterns and trends
           - Evaluate conflicting viewpoints

        3. Writing Phase
           - Craft an attention-grabbing headline
           - Structure content in Financial Report style
           - Include relevant quotes and statistics
           - Maintain objectivity and balance
           - Explain complex concepts clearly

        4. Quality Control
           - Verify all facts and attributions
           - Ensure narrative flow and readability
           - Add context where necessary
           - Include future implications
    """),
    expected_output=dedent("""\
        # {Compelling Headline}

        ## Executive Summary
        {Concise overview of key findings and significance}

        ## Background & Context
        {Historical context and importance}
        {Current landscape overview}

        ## Key Findings
        {Main discoveries and analysis}
        {Expert insights and quotes}
        {Statistical evidence}

        ## Impact Analysis
        {Current implications}
        {Stakeholder perspectives}
        {Industry/societal effects}

        ## Future Outlook
        {Emerging trends}
        {Expert predictions}
        {Potential challenges and opportunities}

        ## Expert Insights
        {Notable quotes and analysis from industry leaders}
        {Contrasting viewpoints}

        ## Sources & Methodology
        {List of primary sources with key contributions}
        {Research methodology overview}

        ---
        Research conducted by Financial Agent
        Credit Rating Style Report
        Published: {current_date}
        Last Updated: {current_time}\
    """),
    markdown=True,
    show_tool_calls=True,
    add_datetime_to_instructions=True,
)

# User Prompt 1
research_agent.print_response("Analyze the current state and future implications \
                              of artificial intelligence in Finance",stream=True,)

# User Prompt 2
research_agent.print_response("Applications of Gen AI in Financial Services",stream=True,)

research_agent.print_response("AI agentsin Financial Services",stream=True,)

"""Stock Analyzer"""

from textwrap import dedent

from agno.agent import Agent
from agno.models.openai import OpenAIChat
from agno.tools.yfinance import YFinanceTools

stock_agent = Agent(
    model=Groq(id="llama3-70b-8192"),
    tools=[
        YFinanceTools(
            stock_price=True,
            analyst_recommendations=True,
            stock_fundamentals=True,
            historical_prices=True,
            company_info=True,
            company_news=True,
        )
    ],
    instructions=dedent("""\
        You are a seasoned credit rating analyst with deep expertise in market analysis! ðŸ“Š

        Follow these steps for comprehensive financial analysis:
        1. Market Overview
           - Latest stock price
           - 52-week high and low
        2. Financial Deep Dive
           - Key metrics (P/E, Market Cap, EPS)
        3. Market Context
           - Industry trends and positioning
           - Competitive analysis
           - Market sentiment indicators

        Your reporting style:
        - Begin with an executive summary
        - Use tables for data presentation
        - Include clear section headers
        - Highlight key insights with bullet points
        - Compare metrics to industry averages
        - Include technical term explanations
        - End with a forward-looking analysis

        Risk Disclosure:
        - Always highlight potential risk factors
        - Note market uncertainties
        - Mention relevant regulatory concerns
    """),
    add_datetime_to_instructions=True,
    show_tool_calls=True,
    markdown=True,
)

print("Stock Agent created. Ready to take user queries..")

stock_agent.print_response(
    """Provide the latest news and a detailed financial performance analysis of Apple (AAPL).
    Include recent stock movements, revenue growth, profit margins, P/E ratio, earnings reports,
    major business developments, and any AI-related advancements. Summarize key analyst insights
    and projections for the company's future.""",
    stream=True
)

import os
import requests
import yfinance as yf
import json
from textwrap import dedent

def fetch_stock_data(ticker):
    """Fetch stock data using Yahoo Finance API."""
    stock = yf.Ticker(ticker)
    info = stock.info
    return {
        "RevenueTTM": info.get("totalRevenue", "N/A"),
        "PERatio": info.get("trailingPE", "N/A"),
        "Description": info.get("longBusinessSummary", "N/A")
    }

def analyze_market():
    """Analyze semiconductor market performance."""
    tickers = ["NVDA", "AMD", "INTC", "TSM", "AAPL", "MSFT", "TSLA", "MU"]
    data = {ticker: fetch_stock_data(ticker) for ticker in tickers}

    insights = ""
    for ticker, metrics in data.items():
        if metrics:
            insights += dedent(f"""
            {ticker} Analysis:
            - Revenue Growth: {metrics.get('RevenueTTM', 'N/A')}
            - PE Ratio: {metrics.get('PERatio', 'N/A')}
            - AI Market Position: {metrics.get('Description', 'N/A')[:200]}...
            """)
        else:
            insights += dedent(f"""
            {ticker} Analysis:
            - Data not available (Check API Key or request limit)
            """)
    return insights

def finance_agent():
    """Finance agent streaming response."""
    from groq import Groq  # Import Groq AI client

    groq_client = Groq(api_key=os.getenv("GROQ_API_KEY"))

    query = dedent("""
    Analyze the semiconductor market performance focusing on:
    - NVIDIA (NVDA)
    - AMD (AMD)
    - Intel (INTC)
    - Taiwan Semiconductor (TSM)
    - Apple (AAPL)
    - Microsoft (MSFT)
    - Tesla (TSLA)
    - Micron Technology (MU)
    Compare their market positions, growth metrics, and future outlook in terms of AI growth.
    """)

    try:
        available_models = groq_client.models.list()
        selected_model = available_models[0]["id"] if available_models else "mixtral-8x7b"

        stream = groq_client.chat.completions.create(model=selected_model, messages=[{"role": "user", "content": query}], stream=True)

        for chunk in stream:
            print(chunk.choices[0].delta.get("content", ""), end="", flush=True)
    except Exception as e:
        print("Error with Groq API:", str(e))

if __name__ == "__main__":
    print("Fetching Semiconductor Market Analysis...")
    print(analyze_market())
    finance_agent()

